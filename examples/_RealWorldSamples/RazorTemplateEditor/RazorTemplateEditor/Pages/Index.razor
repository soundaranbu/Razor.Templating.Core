@page "/"
@using Microsoft.AspNetCore.Mvc.Razor
@using Microsoft.EntityFrameworkCore
@using RazorTemplateEditor.Data
@using Razor.Templating.Core
@using System.Text.Json

@inject TestDatabaseContext dbContext
@inject IRazorTemplateEngine RazorTemplateEngine

<PageTitle>Index</PageTitle>


<EditForm Model="@form" OnSubmit="@HandleSubmit">
    <InputTextArea @bind-Value="form.Json" />
    <InputTextArea @bind-Value="form.Template" />

    <button type="submit">Preview</button>
</EditForm>

@form.Template

@foreach (var template in dbContext.Templates.ToList())
{
    <div @onclick="() => RenderAsync(template.ViewName)">@template.ViewName</div>
}

<div>
    @((MarkupString)renderedText)
</div>

@code {
    string renderedText = "";
    string template = "";

    Form form = new();
    protected override async Task OnInitializedAsync()
    {
        var data = await dbContext.Templates.ToListAsync();
    }


    async Task RenderAsync(string viewName)
    {
        var viewData = new Dictionary<string, object>()
            {
                ["Test"] = "Test"
            };

        viewData = JsonSerializer.Deserialize<Dictionary<string, object>>(form.Json);
        renderedText = await RazorTemplateEngine.RenderAsync<object>(viewName, null!, viewData: viewData);
    }

    private async Task HandleSubmit()
    {
        var template = new Template()
            {
                ViewName = $"{Guid.NewGuid()}.cshtml",
                LastModified = DateTime.Now,
                ViewTemplate = form.Template
            };
        await dbContext.Templates.AddAsync(template);
        await dbContext.SaveChangesAsync();

        await RenderAsync(template.ViewName);
    }

    public class Form
    {
        public string Template { get; set; } = null!;

        public string Json { get; set; } = null!;
    }
}